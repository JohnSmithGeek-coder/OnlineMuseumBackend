# Generated by Django 4.0.4 on 2022-04-30 12:48

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CulturalRelicsData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bibliography', models.TextField(blank=True, null=True)),
                ('credit', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=600, null=True)),
                ('dimensions', models.CharField(max_length=300)),
                ('geography', models.CharField(blank=True, max_length=255, null=True)),
                ('img_url', models.CharField(blank=True, max_length=800, null=True)),
                ('label', models.TextField(blank=True, db_collation='utf8_general_ci', null=True)),
                ('medium', models.CharField(blank=True, max_length=300, null=True)),
                ('object_name', models.CharField(max_length=255)),
                ('object_type', models.CharField(blank=True, max_length=255, null=True)),
                ('previous_owner', models.CharField(blank=True, max_length=400, null=True)),
                ('provenance', models.TextField(blank=True, null=True)),
                ('time_period', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('cat1', models.CharField(blank=True, max_length=255, null=True)),
                ('cat2', models.CharField(blank=True, max_length=255, null=True)),
                ('cat3', models.CharField(blank=True, max_length=255, null=True)),
                ('makers_born', models.TextField(blank=True, null=True)),
                ('makers_job', models.CharField(blank=True, max_length=255, null=True)),
                ('makers_name', models.CharField(blank=True, max_length=255, null=True)),
                ('museum', models.CharField(blank=True, max_length=255, null=True)),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cultural_relics_data',
                'managed': False,
            },
        ),
        # migrations.CreateModel(
        #     name='User',
        #     fields=[
        #         ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('password', models.CharField(max_length=128, verbose_name='password')),
        #         ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
        #         ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
        #         ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
        #         ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
        #         ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
        #         ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
        #         ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
        #         ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
        #         ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
        #         ('gender', models.CharField(choices=[('f', '女'), ('m', '男')], max_length=1)),
        #         ('pic_url', models.CharField(blank=True, max_length=255, null=True)),
        #         ('location', models.CharField(blank=True, max_length=255, null=True)),
        #         ('desc', models.CharField(blank=True, max_length=255, null=True)),
        #         ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
        #         ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
        #     ],
        #     options={
        #         'verbose_name': '用户',
        #         'db_table': 'a_user',
        #     },
        # ),
    ]
